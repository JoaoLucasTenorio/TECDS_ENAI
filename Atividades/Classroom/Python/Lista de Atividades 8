{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOFhbErLKCy967xANizcMBV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["1. Crie uma classe que modele uma pessoa\n","(a) Atributos: nome, idade e endereço\n","(b) Metodos: mostrar endereço e alterar endereço."],"metadata":{"id":"PYt_pzlum5ja"}},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4HiCt7xam4J2","executionInfo":{"status":"ok","timestamp":1709894326166,"user_tz":180,"elapsed":20677,"user":{"displayName":"João Lucas P Tenorio","userId":"09679875196131459042"}},"outputId":"665261f7-f91c-4d88-aa00-0c07e7dda9e6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o nome da pessoa: eloah\n","] a idade da pessoa: 17\n","Digite o endereço da pessoa: lk\n","Endereço de eloah: lk\n","Digite o novo endereço: ak\n","Endereço de eloah alterado para: ak\n","Endereço de eloah: ak\n"]}],"source":["class Pessoa:\n","    def __init__(self, nome, idade, endereco):\n","        self.nome = nome\n","        self.idade = idade\n","        self.endereco = endereco\n","\n","    def mostrar_endereco(self):\n","        print(f\"Endereço de {self.nome}: {self.endereco}\")\n","\n","    def alterar_endereco(self, novo_endereco):\n","        self.endereco = novo_endereco\n","        print(f\"Endereço de {self.nome} alterado para: {self.endereco}\")\n","\n","nome = input(\"Digite o nome da pessoa: \")\n","idade = int(input(\"] a idade da pessoa: \"))\n","endereco = input(\"Digite o endereço da pessoa: \")\n","\n","pessoa_1 = Pessoa(nome, idade, endereco)\n","\n","pessoa_1.mostrar_endereco()\n","novo_endereco = input(\"Digite o novo endereço: \")\n","pessoa_1.alterar_endereco(novo_endereco)\n","pessoa_1.mostrar_endereco()\n"]},{"cell_type":"markdown","source":["2. Crie uma classe que modele uma aluno\n","(a) Atributos: nome, numero de matrıcula e curso\n","(b) Metodos: mostrar curso e alterar curso."],"metadata":{"id":"DjJt_Ki0pP09"}},{"cell_type":"code","source":["class Aluno:\n","    def __init__(self, nome, matricula, curso):\n","        self.nome = nome\n","        self.matricula = matricula\n","        self.curso = curso\n","\n","    def mostrar_curso(self):\n","        print(f\"Curso de {self.nome}: {self.curso}\")\n","\n","    def alterar_curso(self, novo_curso):\n","        self.curso = novo_curso\n","        print(f\"Curso de {self.nome} alterado para: {self.curso}\")\n","\n","nome = input(\"Digite o nome do aluno: \")\n","matricula = input(\"Digite o número de matrícula do aluno: \")\n","curso = input(\"Digite o curso do aluno: \")\n","\n","aluno1 = Aluno(nome, matricula, curso)\n","\n","aluno1.mostrar_curso()\n","novo_curso = input(\"Digite o novo curso: \")\n","aluno1.alterar_curso(novo_curso)\n","aluno1.mostrar_curso()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-_vmRAqjpSJM","executionInfo":{"status":"ok","timestamp":1709894557985,"user_tz":180,"elapsed":33080,"user":{"displayName":"João Lucas P Tenorio","userId":"09679875196131459042"}},"outputId":"7f24f25b-107c-4813-c24e-7e8e71fe3297"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite o nome do aluno: eloah\n","Digite o número de matrícula do aluno: 9047235\n","Digite o curso do aluno: analise de sistemas\n","Curso de eloah: analise de sistemas\n","Digite o novo curso: logisticas\n","Curso de eloah alterado para: logisticas\n","Curso de eloah: logisticas\n"]}]},{"cell_type":"markdown","source":["3. Crie uma classe representando os alunos de um determinado curso. A classe deve conter os atributos matrıcula do aluno, nome, nota da primeira prova, nota da segunda prova e nota da terceira prova. Crie metodos para acessar o nome e a media do aluno."],"metadata":{"id":"fg0XWdIFqHRS"}},{"cell_type":"code","source":["class Aluno:\n","    def __init__(self, matricula, nome, nota1, nota2, nota3):\n","        self.matricula = matricula\n","        self.nome = nome\n","        self.nota1 = nota1\n","        self.nota2 = nota2\n","        self.nota3 = nota3\n","\n","    def calcular_media(self):\n","        return (self.nota1 + self.nota2 + self.nota3) / 3\n","\n","    def obter_nome(self):\n","        return self.nome\n","\n","matricula = input(\"Digite a matrícula do aluno: \")\n","nome = input(\"Digite o nome do aluno: \")\n","nota1 = float(input(\"Digite a nota da primeira prova: \"))\n","nota2 = float(input(\"Digite a nota da segunda prova: \"))\n","nota3 = float(input(\"Digite a nota da terceira prova: \"))\n","\n","aluno1 = Aluno(matricula, nome, nota1, nota2, nota3)\n","\n","print(f\"Nome do aluno: {aluno1.obter_nome()}\")\n","print(f\"Média do aluno: {aluno1.calcular_media()}\")"],"metadata":{"id":"X7WB3K01qHu5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["4. Crie uma classe para representar um horario (hora, minuto e segundo). Implemente os metodos para fazer as operacoes de incremento (de segundos) no horario e diferença entre dois horarios."],"metadata":{"id":"D3GjYPBTqvAi"}},{"cell_type":"code","source":["class Horario:\n","    def __init__(self, hora, minuto, segundo):\n","        self.hora = hora\n","        self.minuto = minuto\n","        self.segundo = segundo\n","\n","    def incrementar_segundos(self, segundos):\n","        total_segundos = self.hora * 3600 + self.minuto * 60 + self.segundo + segundos\n","        self.hora = total_segundos // 3600\n","        self.minuto = (total_segundos % 3600) // 60\n","        self.segundo = total_segundos % 60\n","\n","    def calcular_diferenca(self, outro_horario):\n","        segundos_atual = self.hora * 3600 + self.minuto * 60 + self.segundo\n","        segundos_outro = outro_horario.hora * 3600 + outro_horario.minuto * 60 + outro_horario.segundo\n","        diferenca_segundos = abs(segundos_outro - segundos_atual)\n","        dif_horas = diferenca_segundos // 3600\n","        dif_minutos = (diferenca_segundos % 3600) // 60\n","        dif_segundos = diferenca_segundos % 60\n","        return dif_horas, dif_minutos, dif_segundos\n","\n","hora = int(input(\"Digite a hora: \"))\n","minuto = int(input(\"Digite o minuto: \"))\n","segundo = int(input(\"Digite o segundo: \"))\n","\n","horario1 = Horario(hora, minuto, segundo)\n","\n","segundos_para_incrementar = int(input(\"Digite quantos segundos deseja incrementar: \"))\n","horario1.incrementar_segundos(segundos_para_incrementar)\n","print(f\"Novo horário: {horario1.hora}:{horario1.minuto}:{horario1.segundo}\")\n","\n","hora2 = int(input(\"Digite a hora para calcular a diferença: \"))\n","minuto2 = int(input(\"Digite o minuto para calcular a diferença: \"))\n","segundo2 = int(input(\"Digite o segundo para calcular a diferença: \"))\n","horario2 = Horario(hora2, minuto2, segundo2)\n","dif_horas, dif_minutos, dif_segundos = horario1.calcular_diferenca(horario2)\n","print(f\"Diferença de tempo: {dif_horas} horas, {dif_minutos} minutos e {dif_segundos} segundos\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b-uj1KEMq5y3","executionInfo":{"status":"ok","timestamp":1709894901958,"user_tz":180,"elapsed":30020,"user":{"displayName":"João Lucas P Tenorio","userId":"09679875196131459042"}},"outputId":"5559f395-42d4-4dd2-abf6-cd81945afafb"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Digite a hora: 5\n","Digite o minuto: 30\n","Digite o segundo: 40\n","Digite quantos segundos deseja incrementar: 2\n","Novo horário: 5:30:42\n","Digite a hora para calcular a diferença: 3\n","Digite o minuto para calcular a diferença: 5\n","Digite o segundo para calcular a diferença: 12\n","Diferença de tempo: 2 horas, 25 minutos e 30 segundos\n"]}]},{"cell_type":"markdown","source":["5. Crie uma classe que modele um carro\n","(a) Atributos: marca, ano e preco\n","(b) Metodos: mostrar preco e de exibicao dos dados  "],"metadata":{"id":"tigH32yLseY4"}},{"cell_type":"code","source":["class Carro:\n","    def __init__(self, marca, ano, preco):\n","        self.marca = marca\n","        self.ano = ano\n","        self.preco = preco\n","\n","    def mostrar_preco(self):\n","        print(\"Preço:\", self.preco)\n","\n","    def exibir_dados(self):\n","        print(\"Marca:\", self.marca)\n","        print(\"Ano:\", self.ano)\n","        self.mostrar_preco()\n","\n","\n","carro1 = Carro(\"Toyota\", 2020, 50000)\n","carro1.exibir_dados()"],"metadata":{"id":"MzNuV1_TsjGX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["6. Crie uma classe que modele um Tamagushi (Bichinho Eletrônico):Atributos: Nome, Fome, Saúde e Idade b. Métodos: Alterar Nome, Fome, Saúde e Idade; Retornar Nome, Fome, Saúde e Idade Obs: Existe mais uma informação que devemos levar em consideração, o Humor do nosso tamagushi, este humor é uma combinação entre os atributos Fome e Saúde, ou seja, um campo calculado, então não devemos criar um atributo para armazenar esta informação por que ela pode ser calculada a qualquer momento.\n"],"metadata":{"id":"WCgGBOmUsj0W"}},{"cell_type":"code","source":["class Tamagushi:\n","    def __init__(self, nome, fome, saude, idade):\n","        self.nome = nome\n","        self.fome = fome\n","        self.saude = saude\n","        self.idade = idade\n","\n","    def alterar_nome(self, novo_nome):\n","        self.nome = novo_nome\n","\n","    def alterar_fome(self, nova_fome):\n","        self.fome = nova_fome\n","\n","    def alterar_saude(self, nova_saude):\n","        self.saude = nova_saude\n","\n","    def alterar_idade(self, nova_idade):\n","        self.idade = nova_idade\n","\n","    def retornar_nome(self):\n","        return self.nome\n","\n","    def retornar_fome(self):\n","        return self.fome\n","\n","    def retornar_saude(self):\n","        return self.saude\n","\n","    def retornar_idade(self):\n","        return self.idade\n","\n","    def calcular_humor(self):\n","        if self.fome <= 50 and self.saude >= 50:\n","            return \"Feliz\"\n","        else:\n","            return \"Triste\"\n","\n","\n","tamagushi1 = Tamagushi(\"Tama\", 30, 60, 2)\n","print(\"Nome:\", tamagushi1.retornar_nome())\n","print(\"Fome:\", tamagushi1.retornar_fome())\n","print(\"Saúde:\", tamagushi1.retornar_saude())\n","print(\"Idade:\", tamagushi1.retornar_idade())\n","print(\"Humor:\", tamagushi1.calcular_humor())"],"metadata":{"id":"MGx8KsJmsnUS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["7. Desenvolva uma classe Macaco,que possua os atributos nome e bucho (estomago) e pelo menos os métodos comer(), verBucho() e digerir(). Faça um programa ou teste interativamente, criando pelo menos dois macacos, alimentando-os com pelo menos 3 alimentos diferentes e verificando o conteúdo do estomago a cada refeição. Experimente fazer com que um macaco coma o outro. É possível criar um macaco canibal?"],"metadata":{"id":"yf5_SPoJsno9"}},{"cell_type":"code","source":["class Macaco:\n","    def __init__(self, nome):\n","        self.nome = nome\n","        self.bucho = []\n","\n","    def comer(self, alimento):\n","        if isinstance(alimento, Macaco):\n","            alimento.digerir()\n","            print(self.nome, \"comeu\", alimento.nome)\n","        else:\n","            self.bucho.append(alimento)\n","\n","    def ver_bucho(self):\n","        print(\"Bucho do\", self.nome + \":\", self.bucho)\n","\n","    def digerir(self):\n","        if self.bucho:\n","            comida = self.bucho.pop(0)\n","            print(self.nome, \"digeriu\", comida)\n","        else:\n","            print(\"Bucho do\", self.nome, \"está vazio.\")\n","\n","\n","\n","macaco1 = Macaco(\"Jorge\")\n","macaco2 = Macaco(\"Ana\")\n","\n","macaco1.comer(\"Banana\")\n","macaco1.comer(\"Maçã\")\n","macaco1.comer(\"Pêssego\")\n","\n","macaco2.comer(\"Nozes\")\n","macaco2.comer(\"Uvas\")\n","macaco2.comer(\"Cenoura\")\n","\n","macaco1.ver_bucho()\n","macaco1.comer(macaco2)\n","macaco1.ver_bucho()\n","macaco1.digerir()\n","macaco1.ver_bucho()\n"],"metadata":{"id":"benkVbSHstdk"},"execution_count":null,"outputs":[]}]}